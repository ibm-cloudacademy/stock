<?xml version="1.0" encoding="UTF-8" ?>
<!--
       Copyright 2015-2019 the original author or authors.
       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at
          http://www.apache.org/licenses/LICENSE-2.0
       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
-->
<!DOCTYPE mapper
       PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">

    <insert id="saveProduct" parameterType="com.ibm.lab.product.model.Product">
        insert into product (name, description, price, category) 
        values (#{name}, #{description}, #{price}, #{category})
        ON CONFLICT (id) DO
        update set name = #{name},
                   description = #{description},
                   price = #{price},
                   category = #{category}
    </insert>
    
     <update id="updateProduct" parameterType="com.ibm.lab.product.model.Product">
        update product 
           set name = #{name},
               description = #{description},
               price = #{price},
               category = #{category}
        where id = #{id}
    </update>
    
     <delete id="deleteProduct" parameterType="Long">
        delete from product
        where id = #{id}
    </delete>
        
     <select id="findById" parameterType="Long" resultType="com.ibm.lab.product.model.Product">
        select id, name, description, price, category from product
        where id = #{id}
    </select>
    
    <select id="findByProductName" parameterType="String" resultType="com.ibm.lab.product.model.Product">
        select id, name, description, price, category from product
        where name = #{productName}
    </select>
    
    
     <select id="findAll" parameterType="Long" resultType="com.ibm.lab.product.model.Product">
        select id, name, description, price, category from product
        limit #{id}
    </select>
</mapper>  